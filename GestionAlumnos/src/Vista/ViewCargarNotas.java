/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vista;

import AccesoADatos.AlumnoData;
import AccesoADatos.InscripcionData;
import AccesoADatos.MateriaData;
import Entidades.Alumno;
import Entidades.Inscripcion;
import Entidades.Materia;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Arian
 */
public class ViewCargarNotas extends javax.swing.JInternalFrame {

    private DefaultTableModel modelo;
    
    
    private Alumno alumno;
    private AlumnoData alumnoData;
    private ArrayList <Alumno> listaAlumnos = new ArrayList<>();
    private MateriaData materiaData;
    private InscripcionData inscripcion;
    private boolean activo=false;
    
    public ViewCargarNotas() {
        initComponents();
        modelo = new DefaultTableModel(){
        @Override
        public boolean isCellEditable(int f, int c){
            return false;
        }
    };
        alumnoData= new AlumnoData();
        materiaData = new MateriaData();
        alumno = new Alumno();
        inscripcion= new InscripcionData();
        armarTabla();
        cargarCombo();
        botonGuardar.setEnabled(activo);
      
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jtfNotaIngresada = new javax.swing.JTextField();
        botonGuardar = new javax.swing.JButton();

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Seleccione un alumno");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jtfNotaIngresada.setText("Ingrese la nota");
        jtfNotaIngresada.setToolTipText("");
        jtfNotaIngresada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfNotaIngresadaMouseClicked(evt);
            }
        });

        botonGuardar.setText("Guardar");
        botonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(154, 154, 154))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jtfNotaIngresada, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(botonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfNotaIngresada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonGuardar))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        borrarFilas();
        
        obtenerMaterias();
        
        
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        botonGuardar.setEnabled(true);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jtfNotaIngresadaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfNotaIngresadaMouseClicked
        jtfNotaIngresada.setText("");
    }//GEN-LAST:event_jtfNotaIngresadaMouseClicked

    private void botonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarActionPerformed
        alumno=(Alumno) jComboBox1.getSelectedItem();
        int filaSelected= jTable1.getSelectedRow();
        
        int idm=(int) jTable1.getValueAt(filaSelected, 0) ;
          System.out.println(idm);
         try{
          double nota= Double.parseDouble(jtfNotaIngresada.getText());
             if (nota> 10 || nota<0) {
                 JOptionPane.showMessageDialog(this, "Ingrese un numero entre 0 y 10");
                 
             }else{
                 inscripcion.actualizarNota(alumno.getIdAlumno(), idm, nota);
                 JOptionPane.showMessageDialog(this, "La nota ha sido actualizada!");
                 
             }
          
         }
          catch(NumberFormatException e){
             JOptionPane.showMessageDialog(this, "Por favor Ingrese un numero");
          
          }finally{
             botonGuardar.setEnabled(false);
              borrarFilas();
        
              obtenerMaterias();
              jtfNotaIngresada.setText("");
         }
        
    }//GEN-LAST:event_botonGuardarActionPerformed
    
    private void armarTabla(){
        ArrayList <Object> filaTabla = new ArrayList<>();
        filaTabla.add("ID");
        filaTabla.add("Nombre");
        filaTabla.add("Nota");
        for (Object it: filaTabla) {
            modelo.addColumn(it);
        }
        
        jTable1.setModel(modelo);
        
    }
    
    
    
    
    private void cargarCombo(){
        listaAlumnos=(ArrayList<Alumno>) alumnoData.listarAlumnos();
        
        for (Alumno alu: listaAlumnos) {
            jComboBox1.addItem(alu);
        }
    
    }
    
    private void obtenerMaterias(){
        ArrayList <Materia> listaMateria= new ArrayList<>();
        ArrayList <Inscripcion> listaInscripcion = new ArrayList<>();
        int i=0;
        alumno=(Alumno) jComboBox1.getSelectedItem();
        listaMateria=(ArrayList<Materia>) inscripcion.obtenerMateriasCursadas(alumno.getIdAlumno());
        for (Materia mat: listaMateria) {
            modelo.addRow(new Object [] {mat.getIdMateria(),mat.getNombre()});
        }
        
       listaInscripcion= (ArrayList<Inscripcion>) inscripcion.obtenerInscripcionesPorAlumno(alumno.getIdAlumno());
        
        for (Inscripcion ins: listaInscripcion) {
                modelo.setValueAt(ins.getNota(), i, 2);
                i++;
        }
    
    }
    
      public void borrarFilas(){
        int index = modelo.getRowCount() -1;
        
        for (int i = index; i >=0; i--) {
            
            modelo.removeRow(i);
        }
        
    
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonGuardar;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<Alumno> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jtfNotaIngresada;
    // End of variables declaration//GEN-END:variables
}
